#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <behaviors/num_word.dtsi> 

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// custom helpers
#include "zmk-helpers/helper.h"
#include "eyelash_corne/keymap.h"
#include "zmk-helpers/unicode-chars/french.dtsi"
#include "zmk-helpers/unicode-chars/currency.dtsi"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2   // thumbs

ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <QUICK_TAP_MS>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <QUICK_TAP_MS>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <3>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        main_pswd: main_pswd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp E &kp S &kp T>;
            label = "MAIN_PSWD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E  &kp R        &kp T                                     &mmv MOVE_UP                     &kp Y          &kp U  &kp I      &kp O    &kp P     &kp LEFT_BRACE
&kp TAB     &hml LCTRL A  &hml LGUI S  &hml LALT D  &hml LSHFT F        &kp G                     &mmv MOVE_LEFT  &none           &mmv MOVE_RIGHT  &kp H          &hmr RSHFT J  &hmr LALT K      &hmr LGUI L    &hmr LCTRL SEMI  &kp SQT
&sk LSHFT   &kp Z  &kp X  &kp C  &kp V        &kp B        &kp SPACE                    &mmv MOVE_DOWN                   &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &sk RIGHT_SHIFT
                          &mo 2  &lt 1 SPACE  &lt 3 SPACE                                                                &kp BACKSPACE  &mo 3  &kp ENTER
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                         &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp RA(GRAVE)      &kp EXCL    &kp RA(N2)  &kp LS(N3)  &kp LS(N5)            &kp RA(N6)                                       &mmv MOVE_UP                     &kp RA(RIGHT_BRACE)  &kp RA(N7)       &kp ASTRK          &kp EQUAL             &kp PLUS       &kp LS(BACKSLASH)
&kp RA(N8)         &kp LS(N1)  &kp LS(N2)  &kp RA(N3)  &kp LS(N4)            &kp RA(N4)                       &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LS(N6)           &kp LS(N7)       &kp LS(N8)         &kp LS(N9)            &kp LS(N0)     &kp LA(N5)
&kp RA(BACKSLASH)  &kp MINUS   &kp UNDER   &kp EQUAL   &kp RA(LEFT_BRACKET)  &kp RA(RIGHT_BRACKET)  &trans                    &mmv MOVE_DOWN                   &kp RA(LEFT_BRACE)   &kp RIGHT_BRACE  &kp RA(LESS_THAN)  &kp RA(GREATER_THAN)  &kp LS(SLASH)  &kp BSLH
                                           &trans      &trans                &kp SPACE                                                                         &kp RET              &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1          &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6    &kp F7    &kp F8       &kp F9      &kp F10          &kp F11
&trans          &kp LC(LA(N1))  &kp LC(LA(N2))  &kp LC(LA(N3))    &kp LC(LA(N4))  &kp LC(LA(N5))                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN  &kp UP       &kp RIGHT   &kp PRINTSCREEN  &kp F12
&trans          &kp LC(LA(N6))  &kp LC(LA(N7))  &kp LC(LA(N8))  &kp LC(LA(N9))     &kp LC(LA(N0))  &trans                    &mmv MOVE_DOWN                   &trans    &trans    &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                           &trans       &trans     &trans                                                                   &trans    &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};